# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19SCflKX831WFBfX1bGuMuJTfUXQAgvlc
"""

import tensorflow as tf
from tensorflow import keras
import numpy as np

tf.config.experimental.list_physical_devices('GPU')
print("Num GPUs Available: ", len(tf.config.experimental.list_physical_devices('GPU')))

fashion_mnist = keras.datasets.fashion_mnist
(train_images,train_labels),(test_images,test_labels) = fashion_mnist.load_data()

# model = keras.Sequential([
#     keras.layers.Flatten(input_shape=(28,28)),
#     keras.layers.Dense(128,activation=tf.nn.relu),
#     keras.layers.Dense(10,activation=tf.nn.softmax)
# ])

# model = keras.Sequential([
#     keras.layers.Flatten(input_shape=(28,28)),
#     keras.layers.Dense(256,activation=tf.nn.relu),
#     keras.layers.Dense(10,activation=tf.nn.softmax)
# ])

# model = keras.Sequential([
#     keras.layers.Flatten(input_shape=(28,28)),
#     keras.layers.Dense(64,activation=tf.nn.relu),
#     keras.layers.Dense(64,activation=tf.nn.relu),
#     keras.layers.Dense(64,activation=tf.nn.relu),
#     keras.layers.Dense(10,activation=tf.nn.softmax)
# ])

model = keras.Sequential([
    keras.layers.Flatten(input_shape=(28,28)),
    keras.layers.Dense(128,activation=tf.nn.relu),
    keras.layers.Dense(128,activation=tf.nn.relu),
    keras.layers.Dense(10,activation=tf.nn.softmax)
])


model.compile(optimizer='adam',
        loss = 'sparse_categorical_crossentropy',
        metrics=['accuracy'])
model.fit(train_images,train_labels,epochs=10)
test_loss,test_acc = model.evaluate(test_images,test_labels)
print('Test accuracy:',test_acc)
prediction =model.predict(test_images)
#prediction[0]
np.argmax(prediction[0])